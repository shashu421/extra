<dependency>
    <groupId>org.apache.commons</groupId>
    <artifactId>commons-csv</artifactId>
    <version>1.9.0</version> <!-- Check for the latest version -->
</dependency>

/////////////////////////
/////////////////////////

import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import javax.servlet.http.HttpServletResponse;
import java.io.IOException;
import java.util.Arrays;
import java.util.List;

@RestController
@RequestMapping("/api")
public class UserController {

    private final CsvExportService csvExportService;

    public UserController(CsvExportService csvExportService) {
        this.csvExportService = csvExportService;
    }

    @GetMapping("/export-csv")
    public void exportCsv(HttpServletResponse response) throws IOException {
        List<User> users = Arrays.asList(
            new User("Alice", "alice@example.com", 30),
            new User("Bob", "bob@example.com", 25)
        );

        String csvContent = csvExportService.convertToCsv(users);

        response.setContentType("text/csv");
        response.setHeader("Content-Disposition", "attachment; filename=users.csv");
        response.getWriter().write(csvContent);
    }
}

////////////////////////
////////////////////////


import org.apache.commons.csv.CSVFormat;
import org.apache.commons.csv.CSVPrinter;
import org.springframework.stereotype.Service;

import java.io.IOException;
import java.io.StringWriter;
import java.util.List;

@Service
public class CsvExportService {

    // Define default headers
    private static final String[] DEFAULT_HEADERS = {"Name", "Email", "Age"};

    public String convertToCsv(List<User> users) throws IOException {
        StringWriter stringWriter = new StringWriter();
        try (CSVPrinter csvPrinter = new CSVPrinter(stringWriter, CSVFormat.DEFAULT.withHeader(DEFAULT_HEADERS))) {
            // Write data
            for (User user : users) {
                csvPrinter.printRecord(user.getName(), user.getEmail(), user.getAge());
            }
        }
        return stringWriter.toString();
    }
}

